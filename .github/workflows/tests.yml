name: tests

on:
  push:
    branches:
      - main
      - dev/*
      - releases/*

  pull_request:
    paths:
      - "pystiche/**"
      - "tests/**"
      - "docs/source/conf.py"
      - "examples/**.py"
      - "scripts/check_docs_references.py"
      - "!tests/download/**"
      - "setup.cfg"
      - "pyproject.toml"
      - "pytest.ini"
      - ".coveragerc"
      - "codecov.yml"
      - "tox.ini"
      - "requirements-dev.txt"
      - ".github/workflows/tests.yml"

  schedule:
    - cron: "0 4 * * *"

jobs:
  integration:
    strategy:
      matrix:
        python:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        os:
          - "ubuntu-latest"
        torch:
          - "1.10.0"
        torchvision:
          - "0.11.1"
        include:
          - python: "3.6"
            os: "windows-latest"
            torch: "1.10.0"
            torchvision: "0.11.1"
          - python: "3.6"
            os: "macos-latest"
            torch: "1.10.0"
            torchvision: "0.11.1"
          - python: "3.6"
            os: "ubuntu-latest"
            torch: "1.7.1"
            torchvision: "0.8.2"
          - python: "3.6"
            os: "ubuntu-latest"
            torch: "1.8.1"
            torchvision: "0.9.1"
          - python: "3.6"
            os: "ubuntu-latest"
            torch: "1.9.0"
            torchvision: "0.10.0"

    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}
      TORCH: ${{ matrix.torch }}
      TORCHVISION: ${{ matrix.torchvision }}

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade or install additional system packages
        run: pip install --upgrade pip setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: >
          tox -e tests-integration
          --force-dep torch==${{ matrix.torch }}
          --force-dep torchvision==${{ matrix.torchvision }}
          --notest

      - name: Run tests
        run: >
          tox -e tests-integration
          --force-dep torch==${{ matrix.torch }}
          --force-dep torchvision==${{ matrix.torchvision }}
          -- --skip-large-download

      - name: Upload coverage
        uses: codecov/codecov-action@v1.5.0
        with:
          flags: integration
          env_vars: OS,PYTHON,TORCH

  cli:
    runs-on: ubuntu-latest

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade or install additional system packages
        run: pip install --upgrade pip setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: tox -e tests-cli --notest

      - name: Run tests
        run: tox -e tests-cli

      - name: Upload coverage
        uses: codecov/codecov-action@v1.5.0
        with:
          flags: cli
          env_vars: OS,PYTHON,TORCH

  galleries:
    runs-on: ubuntu-latest

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade or install additional system packages
        run: pip install --upgrade pip setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: tox -e tests-galleries --notest

      - name: Get pystiche.home() directory
        id: pystiche-home
        run: |
          PYTHON=".tox/tests-galleries/bin/python"
          DIR="$($PYTHON -c 'import pystiche; print(pystiche.home())')"
          echo "::set-output name=dir::$DIR"

      - name: Load pystiche.home() from cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pystiche-home.outputs.dir }}
          key: pystiche-home-${{ hashFiles('pystiche/demo.py') }}
          restore-keys: pystiche-home-

      - name: Run tests
        run: tox -e tests-galleries

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade and install additional system packages
        run: pip install --upgrade setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: tox -e tests-docs --notest

      - name: Run tests
        run: tox -e tests-docs
