name: tests

on:
  push:
    branches:
      - master
      - releases/*

  pull_request:
    paths:
      - "pystiche/**"
      - "tests/**"
      - "examples/**.py"
      - "!tests/download/**"
      - "setup.cfg"
      - "pyproject.toml"
      - "pytest.ini"
      - ".coveragerc"
      - "codecov.yml"
      - "tox.ini"
      - "requirements-dev.txt"
      - ".github/workflows/tests.yml"

  schedule:
    - cron: "0 4 * * *"

jobs:
  integration:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.6, 3.7, 3.8]
      fail-fast: true

    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade or install additional system packages
        run: pip install --upgrade pip setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: tox -e tests-integration --notest

      - name: Run tests
        run: tox -e tests-integration -- --skip-large-download

      - name: Upload coverage
        uses: codecov/codecov-action@v1.0.12
        with:
          env_vars: OS,PYTHON

  galleries:
    runs-on: ubuntu-latest

    steps:
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Upgrade or install additional system packages
        run: pip install --upgrade pip setuptools virtualenv wheel

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Create environment
        run: tox -e tests-galleries --notest

      - name: Get pystiche.home() directory
        id: pystiche-home
        run: |
          PYTHON=".tox/tests-galleries/bin/python"
          DIR="$($PYTHON -c 'import pystiche; print(pystiche.home())')"
          echo "::set-output name=dir::$DIR"

      - name: Load pystiche.home() from cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pystiche-home.outputs.dir }}
          key: pystiche-home-${{ hashFiles('pystiche/demo.py') }}
          restore-keys: pystiche-home-

      - name: Run tests
        run: tox -e tests-galleries
